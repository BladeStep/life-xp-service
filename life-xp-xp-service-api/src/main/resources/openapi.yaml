openapi: 3.0.1
info:
  title: User Service API
  description: API для управления пользователями
  version: 1.0.0

paths:
  /users/{id}:
    get:
      summary: Получить данные пользователя
      description: Возвращает информацию о пользователе по его UUID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          description: UUID пользователя
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponseDto"
        "404":
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/create:
    post:
      summary: Регистрация пользователя
      description: Создаёт нового пользователя
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequestDto"
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponseDto"
        "400":
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    UserDto:
      type: object
      required:
        - id
        - name
        - email
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
          description: Дата создания пользователя (ISO 8601)

    CreateUserRequestDto:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string
          format: email

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer

    UserResponseDto:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email

    CreateUserResponseDto:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid